#!/usr/bin/env bash

# Script to test SearchableRecords against multiple database adapters

set -e

echo "üß™ Testing SearchableRecords with Multiple Database Adapters"
echo "==========================================================="

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Track results
SQLITE_RESULT=0
POSTGRESQL_RESULT=0
MYSQL_RESULT=0

# Test SQLite
echo -e "\n${BLUE}Running SQLite tests...${NC}"
if bin/test-sqlite3; then
    SQLITE_RESULT=0
else
    SQLITE_RESULT=1
fi

# Test PostgreSQL (if available)
echo -e "\n${BLUE}Checking PostgreSQL availability...${NC}"
if command -v pg_isready >/dev/null 2>&1 && pg_isready -h ${POSTGRES_HOST:-localhost} -p ${POSTGRES_PORT:-5432} >/dev/null 2>&1; then
    echo -e "${BLUE}Running PostgreSQL tests...${NC}"
    if bin/test-postgresql; then
        POSTGRESQL_RESULT=0
    else
        POSTGRESQL_RESULT=1
    fi
else
    echo -e "${RED}‚ö†Ô∏è  PostgreSQL not available, skipping PostgreSQL tests${NC}"
    echo "To test with PostgreSQL:"
    echo "1. Install PostgreSQL client tools (pg_isready)"
    echo "2. Start PostgreSQL service or container"
    echo "3. Ensure connection settings in spec/dummy/config/database.yml are correct"
fi

# Test MySQL (if available)
echo -e "\n${BLUE}Checking MySQL availability...${NC}"
if command -v mysql >/dev/null 2>&1; then
    # Try to connect to MySQL server
    if mysql -h ${MYSQL_HOST:-localhost} -P ${MYSQL_PORT:-3306} -u ${MYSQL_USER:-derek} -p${MYSQL_PASSWORD:-password} -e "SELECT 1" >/dev/null 2>&1; then
        echo -e "${BLUE}Running MySQL tests...${NC}"
        if bin/test-mysql; then
            MYSQL_RESULT=0
        else
            MYSQL_RESULT=1
        fi
    else
        echo -e "${RED}‚ö†Ô∏è  MySQL not available or connection failed, skipping MySQL tests${NC}"
        echo "To test with MySQL:"
        echo "1. Start MySQL service or container"
        echo "2. Ensure connection settings in spec/dummy/config/database.yml are correct"
        echo "3. Set MYSQL_HOST, MYSQL_USER, MYSQL_PASSWORD environment variables if needed"
    fi
else
    echo -e "${RED}‚ö†Ô∏è  MySQL client not installed, skipping MySQL tests${NC}"
fi

# Summary
echo -e "\n${BLUE}Test Summary${NC}"
echo "============="

if [ $SQLITE_RESULT -eq 0 ]; then
    echo -e "${GREEN}‚úÖ SQLite tests passed${NC}"
else
    echo -e "${RED}‚ùå SQLite tests failed${NC}"
fi

if command -v pg_isready >/dev/null 2>&1 && pg_isready -h ${POSTGRES_HOST:-localhost} -p ${POSTGRES_PORT:-5432} >/dev/null 2>&1; then
    if [ $POSTGRESQL_RESULT -eq 0 ]; then
        echo -e "${GREEN}‚úÖ PostgreSQL tests passed${NC}"
    else
        echo -e "${RED}‚ùå PostgreSQL tests failed${NC}"
    fi
fi

if command -v mysql >/dev/null 2>&1 && mysql -h ${MYSQL_HOST:-localhost} -P ${MYSQL_PORT:-3306} -u ${MYSQL_USER:-derek} -p${MYSQL_PASSWORD:-password} -e "SELECT 1" >/dev/null 2>&1; then
    if [ $MYSQL_RESULT -eq 0 ]; then
        echo -e "${GREEN}‚úÖ MySQL tests passed${NC}"
    else
        echo -e "${RED}‚ùå MySQL tests failed${NC}"
    fi
fi

# Exit with error if any tests failed
if [ $SQLITE_RESULT -ne 0 ] || [ $POSTGRESQL_RESULT -ne 0 ] || [ $MYSQL_RESULT -ne 0 ]; then
    exit 1
fi

echo -e "\n${GREEN}üéâ All available database tests passed!${NC}"
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # Rails 7.1.5 with all Ruby/Database combinations (Ruby 3.0+)
          - ruby: '3.0'
            database: 'sqlite3'
            rails: '7.1.5'
          - ruby: '3.0'
            database: 'postgresql'
            rails: '7.1.5'
          - ruby: '3.0'
            database: 'mysql2'
            rails: '7.1.5'
          - ruby: '3.1'
            database: 'sqlite3'
            rails: '7.1.5'
          - ruby: '3.1'
            database: 'postgresql'
            rails: '7.1.5'
          - ruby: '3.1'
            database: 'mysql2'
            rails: '7.1.5'
          - ruby: '3.2'
            database: 'sqlite3'
            rails: '7.1.5'
          - ruby: '3.2'
            database: 'postgresql'
            rails: '7.1.5'
          - ruby: '3.2'
            database: 'mysql2'
            rails: '7.1.5'
          - ruby: '3.3'
            database: 'sqlite3'
            rails: '7.1.5'
          - ruby: '3.3'
            database: 'postgresql'
            rails: '7.1.5'
          - ruby: '3.3'
            database: 'mysql2'
            rails: '7.1.5'
          - ruby: '3.4'
            database: 'sqlite3'
            rails: '7.1.5'
          - ruby: '3.4'
            database: 'postgresql'
            rails: '7.1.5'
          - ruby: '3.4'
            database: 'mysql2'
            rails: '7.1.5'
          
          # Rails 7.2.2 with all Ruby/Database combinations (Ruby 3.1+)
          - ruby: '3.1'
            database: 'sqlite3'
            rails: '7.2.2'
          - ruby: '3.1'
            database: 'postgresql'
            rails: '7.2.2'
          - ruby: '3.1'
            database: 'mysql2'
            rails: '7.2.2'
          - ruby: '3.2'
            database: 'sqlite3'
            rails: '7.2.2'
          - ruby: '3.2'
            database: 'postgresql'
            rails: '7.2.2'
          - ruby: '3.2'
            database: 'mysql2'
            rails: '7.2.2'
          - ruby: '3.3'
            database: 'sqlite3'
            rails: '7.2.2'
          - ruby: '3.3'
            database: 'postgresql'
            rails: '7.2.2'
          - ruby: '3.3'
            database: 'mysql2'
            rails: '7.2.2'
          - ruby: '3.4'
            database: 'sqlite3'
            rails: '7.2.2'
          - ruby: '3.4'
            database: 'postgresql'
            rails: '7.2.2'
          - ruby: '3.4'
            database: 'mysql2'
            rails: '7.2.2'
          
          # Rails 8.0.2 with all Ruby/Database combinations (Ruby 3.2+)
          - ruby: '3.2'
            database: 'sqlite3'
            rails: '8.0.2'
          - ruby: '3.2'
            database: 'postgresql'
            rails: '8.0.2'
          - ruby: '3.2'
            database: 'mysql2'
            rails: '8.0.2'
          - ruby: '3.3'
            database: 'sqlite3'
            rails: '8.0.2'
          - ruby: '3.3'
            database: 'postgresql'
            rails: '8.0.2'
          - ruby: '3.3'
            database: 'mysql2'
            rails: '8.0.2'
          - ruby: '3.4'
            database: 'sqlite3'
            rails: '8.0.2'
          - ruby: '3.4'
            database: 'postgresql'
            rails: '8.0.2'
          - ruby: '3.4'
            database: 'mysql2'
            rails: '8.0.2'
          
          # Rails main with all Ruby/Database combinations (Ruby 3.2+)
          - ruby: '3.2'
            database: 'sqlite3'
            rails: 'main'
          - ruby: '3.2'
            database: 'postgresql'
            rails: 'main'
          - ruby: '3.2'
            database: 'mysql2'
            rails: 'main'
          - ruby: '3.3'
            database: 'sqlite3'
            rails: 'main'
          - ruby: '3.3'
            database: 'postgresql'
            rails: 'main'
          - ruby: '3.3'
            database: 'mysql2'
            rails: 'main'
          - ruby: '3.4'
            database: 'sqlite3'
            rails: 'main'
          - ruby: '3.4'
            database: 'postgresql'
            rails: 'main'
          - ruby: '3.4'
            database: 'mysql2'
            rails: 'main'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: searchable_records_test
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 3
        ports:
          - 5432:5432

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: searchable_records_test
          MYSQL_ALLOW_EMPTY_PASSWORD: no
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -pmysql"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=3
        ports:
          - 3306:3306

    env:
      DATABASE_ADAPTER: ${{ matrix.database }}
      RAILS_VERSION: ${{ matrix.rails }}

    steps:
    - uses: actions/checkout@v4

    - name: Set database-specific environment
      run: |
        case "${{ matrix.database }}" in
          postgresql)
            echo "PGHOST=localhost" >> $GITHUB_ENV
            echo "PGPORT=5432" >> $GITHUB_ENV
            echo "PGUSER=postgres" >> $GITHUB_ENV
            echo "PGPASSWORD=postgres" >> $GITHUB_ENV
            echo "PGDATABASE=searchable_records_test" >> $GITHUB_ENV
            ;;
          mysql2)
            echo "MYSQL_HOST=127.0.0.1" >> $GITHUB_ENV
            echo "MYSQL_PORT=3306" >> $GITHUB_ENV
            echo "MYSQL_USER=root" >> $GITHUB_ENV
            echo "MYSQL_PASSWORD=mysql" >> $GITHUB_ENV
            echo "MYSQL_DATABASE=searchable_records_test" >> $GITHUB_ENV
            ;;
        esac

    - name: Select base Gemfile for Ruby version
      run: |
        if [[ "${{ matrix.ruby }}" == "3.0" || "${{ matrix.ruby }}" == "3.1" ]]; then
          echo "BASE_GEMFILE=Gemfile.ruby-3.0" >> $GITHUB_ENV
        else
          echo "BASE_GEMFILE=Gemfile.ruby-3.2" >> $GITHUB_ENV
        fi

    - name: Set up Ruby ${{ matrix.ruby }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true

    - name: Create Rails-specific Gemfile
      run: |
        # Start with base Gemfile content (excluding Rails line)
        grep -v "gem 'rails'" $BASE_GEMFILE > Gemfile.test
        
        # Add Rails version
        if [[ "${{ matrix.rails }}" == "main" ]]; then
          echo "gem 'rails', git: 'https://github.com/rails/rails.git', branch: 'main'" >> Gemfile.test
        else
          echo "gem 'rails', '~> ${{ matrix.rails }}'" >> Gemfile.test
        fi
        
        echo "BUNDLE_GEMFILE=Gemfile.test" >> $GITHUB_ENV

    - name: Test MySQL connection
      if: matrix.database == 'mysql2'
      run: mysqladmin ping -h 127.0.0.1 -u root -pmysql

    - name: Run tests
      run: bin/rspec

    - name: Upload coverage to Codecov
      if: matrix.ruby == '3.4' && matrix.database == 'sqlite3' && matrix.rails == '8.0.2'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/coverage.xml
        fail_ci_if_error: false
